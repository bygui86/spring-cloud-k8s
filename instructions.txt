
TODO transfer this to README.md


Instructions

# [optional if testing locally] start minikube
	minikube start
	eval $(minikube docker-env)

# Build Docker image
	docker build -t spring-cloud-k8s-config:0.0.1 .

# Check Docker image
	docker images | grep -i "spring-cloud-k8s-config"

# Deploy ConfigMap
	kubectl create -f kube-resources/configmap.yaml

# Check ConfigMap creation
	kubectl get cm
	kubectl describe cm spring-cloud-k8s-config

# Deploy ServiceAccount, Roles and RoleBindings
	kubectl create -f kube-resources/svc-account.yaml
	kubectl create -f kube-resources/role.yaml
	kubectl create -f kube-resources/role-bind.yaml

# Check ServiceAccount, Roles and RoleBindings creation
	kubectl get sa
	kubectl get sa spring-cloud-k8s-config -o yaml
	kubectl get roles
	kubectl get roles spring-cloud-k8s-config -o yaml
	kubectl get rolebindings
	kubectl get rolebindings spring-cloud-k8s-config -o yaml

# Deploy application
	kubectl create -f kube-resources/deploy.yaml
	kubectl rollout status deploy/spring-cloud-k8s-config

# Check application deployment
	kubectl get deploy
	kubectl get po -l app=spring-cloud-k8s-config -o jsonpath='{range .items[*]}{.metadata.name}{"\n"}{end}' | xargs kubectl logs -f

# Expose application
	kubectl create -f kube-resources/svc.yaml

# Check application exposure
	kubectl get svc -l app=spring-cloud-k8s-config

# [optional] Create Ingress
	kubectl create -f kube-resources/ing.yaml

# [optional] Check application exposure
	kubectl get ing

# Test application
	curl $(minikube service spring-cloud-k8s-config --url)"/info"

# Reloading ConfigMap
	kubectl edit configmap spring-cloud-k8s-config
	## modify the value of a property, no matter which one
	## save the modification
	## wait a some seconds (basing on the reload polling configured on the service, default are 15)

# Test application after configurations refresh
	curl $(minikube service spring-cloud-k8s-config --url)"/info"

# Remove everything
	[optional] kubectl delete ing spring-cloud-k8s-config
	kubectl delete svc spring-cloud-k8s-config
	kubectl delete deploy spring-cloud-k8s-config
	kubectl delete configmaps spring-cloud-k8s-config
	kubectl delete sa spring-cloud-k8s-config
	kubectl delete roles spring-cloud-k8s-config
	kubectl delete rolebindings spring-cloud-k8s-config
	docker image rm spring-cloud-k8s-config:0.0.1
